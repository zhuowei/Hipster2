{"version":3,"sources":["LoginPage.tsx","SearchHeader.tsx","common.js","SearchUserPage.tsx","SearchClubPage.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["LoginPage","Container","Button","TextField","variant","SearchHeader","props","history","useHistory","Box","width","display","IconButton","onClick","window","location","href","ArrowBack","style","flexGrow","onChange","e","onSearchChange","target","value","searchText","Tabs","currentPage","Tab","label","id","push","getHeaders","useGuestMode","headers","getDeviceId","isLoggedIn","auth","getConfig","auth_token","user_profile","user_id","config","apiUrl","api","apiPost","body","opts","a","disableGuestMode","fetch","method","JSON","stringify","response","json","responseBody","localStorage","hipsterHouse","parse","setConfig","newConfig","deviceId","uuidv4","toUpperCase","UserListItem","u","user","ListItem","button","ListItemAvatar","Avatar","src","photo_url","ListItemText","primary","Fragment","name","username","secondary","Typography","maxHeight","overflow","bio","SearchUserPage","state","searchResult","searchDebounce","searchChanged","newText","setState","clearTimeout","setTimeout","doTheSearch","originalText","this","length","cofollows_only","following_only","followers_only","query","success","users","List","map","React","Component","ClubListItem","c","club","club_id","description","SearchClubPage","clubs","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f160c713.chunk.js","sourcesContent":["import {Container, Button, TextField} from '@material-ui/core';\nfunction LoginPage() {\n  return (\n    <Container>\n      <form>\n        <Button>Next</Button>\n      </form>\n      <form>\n        <TextField variant=\"outlined\" />\n        <Button>Next</Button>\n      </form>\n    </Container>\n  );\n}\nexport default LoginPage;\n","import {\n  Container,\n  IconButton,\n  Box,\n  Tab,\n  Tabs,\n  TextField,\n} from '@material-ui/core';\nimport {ArrowBack} from '@material-ui/icons';\nimport {useHistory} from 'react-router-dom';\ninterface SearchHeaderProps {\n  currentPage?: number;\n  searchText?: string;\n  onSearchChange?: any;\n}\nfunction SearchHeader(props: SearchHeaderProps) {\n  const styles = {\n    textField: {\n      flexGrow: 1,\n    },\n  };\n  const history = useHistory();\n  const userTabClicked = () => {\n    history.push('/search/user');\n  };\n  const clubTabClicked = () => {\n    history.push('/search/club');\n  };\n  const onBackClick = () => {\n    window.location.href = '/';\n  };\n  return (\n    <Box>\n      <Box width=\"100%\" display=\"flex\">\n        <IconButton onClick={onBackClick}>\n          <ArrowBack />\n        </IconButton>\n        <TextField\n          variant=\"outlined\"\n          style={styles.textField}\n          onChange={e => props.onSearchChange(e.target.value)}\n          value={props.searchText}\n        />\n      </Box>\n      <Tabs value={props.currentPage} variant=\"fullWidth\">\n        <Tab label=\"User\" id=\"user-tab\" onClick={userTabClicked} />\n        <Tab label=\"Club\" id=\"club-tab\" onClick={clubTabClicked} />\n      </Tabs>\n    </Box>\n  );\n}\nexport default SearchHeader;\n","import {v4 as uuidv4} from 'uuid';\n/* eslint-disable no-restricted-globals */\n\nfunction getHeaders(useGuestMode) {\n  const headers = {\n    'User-Agent': 'clubhouse/269 (iPhone; iOS 14.1; Scale/3.00)',\n    'CH-Languages': 'en-US',\n    'CH-Locale': 'en_US',\n    'CH-AppVersion': '0.1.15',\n    'CH-AppBuild': '269',\n    'CH-UserID': '(null)',\n    'CH-DeviceId': getDeviceId(),\n  };\n  if (isLoggedIn()) {\n    const auth = getConfig().auth;\n    headers['Authorization'] = 'Token ' + auth.auth_token;\n    headers['CH-UserID'] = auth.user_profile.user_id;\n  } else if (useGuestMode) {\n    // Hi, View Source user: please don't get this banned, ok?\n    headers['Authorization'] = 'Token 6d2e7064fbe7a06c4d423015581e20c6dbc24302';\n    headers['CH-UserID'] = '69577135';\n    headers['CH-DeviceId'] = '2E76C714-7730-4920-A56C-896622A7A794';\n  }\n  return headers;\n}\nfunction isLoggedIn() {\n  const config = getConfig();\n  return config.auth && config.auth.auth_token;\n}\n\nfunction apiUrl(api) {\n  return 'https://api.hipster.house/api/' + api;\n}\n\nasync function apiPost(api, body, opts) {\n  let useGuestMode = true;\n  if (opts && opts.disableGuestMode) {\n    useGuestMode = false;\n  }\n  const response = await fetch(apiUrl(api), {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'content-type': 'application/json; charset=utf-8',\n      ...getHeaders(useGuestMode),\n    },\n  });\n  const responseBody = await response.json();\n  return responseBody;\n}\n\nasync function apiGet(api) {\n  const response = await fetch(apiUrl(api), {\n    method: 'GET',\n    headers: getHeaders(/*useGuestMode=*/ true),\n  });\n  const responseBody = await response.json();\n  return responseBody;\n}\n\nfunction getConfig() {\n  if (!localStorage.hipsterHouse) return {};\n  return JSON.parse(localStorage.hipsterHouse);\n}\n\nfunction setConfig(newConfig) {\n  localStorage.hipsterHouse = JSON.stringify({\n    ...getConfig(),\n    ...newConfig,\n  });\n}\n\nasync function updateUser() {\n  const waitlistResponse = await apiGet('check_waitlist_status');\n  const response =\n    waitlistResponse && waitlistResponse.is_waitlisted\n      ? {}\n      : await apiPost('me', {});\n  setConfig({user: response, waitlist: waitlistResponse});\n}\n\nasync function doRedirect(needsOffWaitlist) {\n  if (!isLoggedIn()) {\n    if (needsOffWaitlist) {\n      location = '/';\n      return;\n    }\n    return;\n  }\n  await updateUser();\n  if (needsOffWaitlist && isWaitlisted()) {\n    location = '/';\n    return;\n  }\n}\n\nfunction isWaitlisted() {\n  if (getConfig().bypass) return false;\n  return getConfig().waitlist && getConfig().waitlist.is_waitlisted;\n}\n\nfunction getDeviceId() {\n  let deviceId = getConfig().deviceId;\n  if (!deviceId) {\n    deviceId = uuidv4().toUpperCase();\n    setConfig({deviceId});\n  }\n  return deviceId;\n}\nexport {apiPost};\n","import {\n  Container,\n  IconButton,\n  Box,\n  Tab,\n  Tabs,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport {ArrowBack} from '@material-ui/icons';\nimport SearchHeader from './SearchHeader';\nimport React from 'react';\nimport {apiPost} from './common';\n\nfunction UserListItem(props: any) {\n  const u = props.user;\n  const textStyle = {\n    maxHeight: '48px',\n    overflow: 'hidden',\n  };\n  const listItemClicked = () => {\n    window.location.href = '/user.html?' + u.user_id;\n  };\n  return (\n    <ListItem onClick={listItemClicked} button>\n      <ListItemAvatar>\n        <Avatar src={u.photo_url} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          <React.Fragment>\n            <b>{u.name}</b> @{u.username}\n          </React.Fragment>\n        }\n        secondary={<Typography style={textStyle}>{u.bio}</Typography>}\n      />\n    </ListItem>\n  );\n}\n\nclass SearchUserPage extends React.Component {\n  public state = {searchResult: [], searchText: ''};\n  private searchDebounce = -1;\n  private searchChanged = (newText: string) => {\n    this.setState({searchText: newText});\n    clearTimeout(this.searchDebounce);\n    this.searchDebounce = window.setTimeout(() => {\n      this.doTheSearch();\n    }, 500);\n  };\n  private async doTheSearch() {\n    const originalText = this.state.searchText;\n    if (originalText.length === 0) {\n      this.setState({searchResult: []});\n      return;\n    }\n    const response = await apiPost('search_users', {\n      cofollows_only: false,\n      following_only: false,\n      followers_only: false,\n      query: this.state.searchText,\n    });\n    if (originalText != this.state.searchText) {\n      return;\n    }\n    if (response.success) {\n      this.setState({searchResult: response.users});\n    } else {\n      this.setState({searchResult: []});\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <SearchHeader\n          currentPage={0}\n          onSearchChange={this.searchChanged}\n          searchText={this.state.searchText}\n        />\n        <List>\n          {this.state.searchResult.map(a => (\n            <UserListItem user={a} />\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  }\n}\nexport default SearchUserPage;\n","import {\n  Container,\n  Button,\n  Tab,\n  Tabs,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport SearchHeader from './SearchHeader';\nimport React from 'react';\nimport {apiPost} from './common';\n\nfunction ClubListItem(props: any) {\n  const c = props.club;\n  const textStyle = {\n    maxHeight: '48px',\n    overflow: 'hidden',\n  };\n  const listItemClicked = () => {\n    window.location.href = '/club.html?' + c.club_id;\n  };\n  return (\n    <ListItem onClick={listItemClicked} button>\n      <ListItemAvatar>\n        <Avatar src={c.photo_url} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={c.name}\n        secondary={<Typography style={textStyle}>{c.description}</Typography>}\n      />\n    </ListItem>\n  );\n}\n\nclass SearchClubPage extends React.Component {\n  public state = {searchResult: [], searchText: ''};\n  private searchDebounce = -1;\n  private searchChanged = (newText: string) => {\n    this.setState({searchText: newText});\n    clearTimeout(this.searchDebounce);\n    this.searchDebounce = window.setTimeout(() => {\n      this.doTheSearch();\n    }, 500);\n  };\n  private async doTheSearch() {\n    const originalText = this.state.searchText;\n    if (originalText.length === 0) {\n      this.setState({searchResult: []});\n      return;\n    }\n    const response = await apiPost('search_clubs', {\n      cofollows_only: false,\n      following_only: false,\n      followers_only: false,\n      query: this.state.searchText,\n    });\n    if (originalText != this.state.searchText) {\n      return;\n    }\n    if (response.success) {\n      this.setState({searchResult: response.clubs});\n    } else {\n      this.setState({searchResult: []});\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <SearchHeader\n          currentPage={1}\n          onSearchChange={this.searchChanged}\n          searchText={this.state.searchText}\n        />\n        <List>\n          {this.state.searchResult.map(a => (\n            <ClubListItem club={a} />\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  }\n}\nexport default SearchClubPage;\n","import './App.css';\nimport LoginPage from './LoginPage';\nimport SearchUserPage from './SearchUserPage';\nimport SearchClubPage from './SearchClubPage';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router basename=\"/h2/\">\n      <Route path=\"/login\" component={LoginPage} />\n      <Route path=\"/search/user\" component={SearchUserPage} />\n      <Route path=\"/search/club\" component={SearchClubPage} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}